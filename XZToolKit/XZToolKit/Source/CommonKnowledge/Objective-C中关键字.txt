strong:强引用,引用计数+1

weak:弱引用,引用计数不变,当对象消失后自动把指针变成nil

nonatomic:非原子性访问,不加同步，多线程并发访问会提高性能

atomic:原子性访问,使用的一种线程保护技术,基本上来讲,是防止在写未完成的时候被另外一个线程读取,造成数据错误

copy:内容拷贝,创建一个新对象,新的引用计数为1,旧对象不变

assign:简单赋值,不更改索引计数,对基础数据类型(NSInteger)和C数据类型(int,float,double,char,等）

retain:指针拷贝,调用对象的引用计数+1

@property:自动生成某个成员变量的setter和getter方法的声明

@synthesize:助生成成员变量的setter和getter方法的实现

@dynamic:getter和setter方法会在程序运行的时候或者用其他方式动态绑定

self:是类的隐藏的参数,指向当前当前调用方法的类

super:super并不是隐藏的参数,它只是一个“编译器指示符”,它和 self 指向的是相同的消息接收者,super 告诉编译器,当调用 setName 的方法时,要去调用父类的方法,而不是本类里的
	