即在编译的时候将函数体替换函数调用，从而不需要将parameter，returnaddress进行push/pop stack的操作，
从而加速app的运行，然而，会增加二进制文件的大小

内联函数是通过编译器的控制来实现的，有语法检查、类型检查和安全检查；内联函数是真正的函数，而且在调用的地方，由编译器负责把内联函数的函数体代码块替换到内联函数被调用的地方，这一点与宏替换很相似；内联函数有参数，有返回值；由于内联函数可以像宏一样被展开，所以调用内联函数的时候，取消了函数参数压栈、出栈所带来的开销，从而减少了函数调用开销；这就是内联函数的优越于宏的地方

由于内联函数与宏一样也是实现为代码替换，所以定义为内联函数的函数体不宜过大，如果函数体过大，则某些普通的编译器就会放弃内联方式，而改用调用普通函数的方式，这样就失去了内联函数的意义了；所以，内联函数的函数体代码不宜过大，一般就是3---4行代码即可

CG_INLINE == static inline